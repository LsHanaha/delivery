[project]
name = "delivery"
version = "0.1.0"
description = "Learning ddd"
authors = [
    {name = "ruatrk8",email = "kirill.trishin@raiffeisen.com"}
]
readme = "README.md"
requires-python = ">=3.13,<4"
dependencies = [
    "pydantic (>=2.10.6,<3.0.0)",
    "pydantic-settings (>=2.8.1,<3.0.0)",
    "sqlalchemy (>=2.0.39,<3.0.0)",
    "psycopg2 (>=2.9.10,<3.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "that-depends (>=2.2.0,<3.0.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
ruff = "^0.9.9"
faker = "^37.0.0"
alembic = "^1.15.1"
pytest-asyncio = "^0.26.0"
greenlet = "^3.1.1"
mypy = "^1.15.0"


[tool.ruff]
fix = true
unsafe-fixes = true
line-length = 120
target-version = "py312"
extend-exclude = ["bin"]

[tool.ruff.format]
docstring-code-format = true


[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D1", # allow missing docstrings
    "FBT", # allow boolean args
    "INP", # ignore flake8-no-pep420
    "B008", # function-call-in-default-argument
    "TRY003", # allow long exception messages
    "EM102", # allow f-strings in exception messages
    "D203", # "one-blank-line-before-class" conflicting with D211
    "D213", # "multi-line-summary-second-line" conflicting with D212
    "COM812", # flake8-commas "Trailing comma missing"
    "ISC001", # flake8-implicit-str-concat
    "S311",
    "PLR2004",
    "PT011"
]
isort.lines-after-imports = 2
isort.no-lines-before = ["standard-library", "local-folder"]
pylint.max-args = 6


[tool.ruff.lint.extend-per-file-ignores]
"tests/*.py" = [
    "S101", # allow asserts
]

[tool.poetry]
package-mode = false


[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"